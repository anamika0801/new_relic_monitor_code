name: New Relic Scripted API Monitor configration
on:
  workflow_dispatch:  # Manual trigger only

jobs:
  deploy-dashboards:
    runs-on: ubuntu-latest

    
    # Define environment variables used throughout the job
    env:
      NR_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
      NR_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
      MONITOR_NAME: 'Public API Check - GH Actions (6-hr)'
      MONITOR_URI: 'https://placeholder.com'
      
    steps:
      - name: 1. Checkout repository
        uses: actions/checkout@v4

      - name: 2. Read Monitor Script and Escape for JSON
        id: script_data
        run: |
          # Read the raw script file content
          SCRIPT_CONTENT=$(cat monitors/ap-api-monitor-conf-script.js)
          
          # Escape the content for inclusion as a JSON string literal.
          # jq -Rs . reads raw text and outputs it as a safe JSON string (e.g., handles newlines, quotes).
          ESCAPED_SCRIPT=$(echo "$SCRIPT_CONTENT" | jq -Rs .)
          
          # Pass the escaped script content to the next step
          echo "escaped_script=$ESCAPED_SCRIPT" >> $GITHUB_OUTPUT

      - name: 3. Create Scripted API Monitor via NerdGraph
        env:
          SCRIPT_TO_DEPLOY: ${{ steps.script_data.outputs.escaped_script }}
          
        run: |
          # --- A. Define the FIXED GraphQL Mutation ---
          # Uses the corrected mutation name (syntheticsCreateScriptedApiMonitor)
          # Uses the requested period (EVERY_6_HOURS) and locations (Washington, Stockholm)
          GRAPHQL_MUTATION=$(cat <<EOF
            mutation CreateMonitor(\$scriptContent: String!) {
              syntheticsCreateScriptedApiMonitor(
                accountId: $NR_ACCOUNT_ID,
                monitor: {
                  name: "$MONITOR_NAME",
                  locations: {
                    public: ["AWS_US_EAST_1", "AWS_EU_NORTH_1"] # Washington & Stockholm
                  },
                  period: EVERY_6_HOURS, # 6 hours interval
                  status: ENABLED,
                  uri: "$MONITOR_URI",
                  runtime: {
                    runtimeType: NODE_API,
                    runtimeTypeVersion: "16.10",
                    scriptLanguage: JAVASCRIPT
                  },
                  script: \$scriptContent # Script content passed via variable
                }
              ) {
                errors {
                  description
                  type
                }
                monitor {
                  guid
                  name
                  status
                }
              }
            }
          EOF
          )
          
          # --- B. Construct the final JSON payload for the API request ---
          JSON_PAYLOAD=$(cat <<EOF
          {
            "query": $(echo "$GRAPHQL_MUTATION" | jq -Rs .),
            "variables": {
              "scriptContent": $SCRIPT_TO_DEPLOY
            }
          }
          EOF
          )
          
          # --- C. Execute the curl command against the NerdGraph API ---
          echo "Sending NerdGraph Payload..."
          echo "$JSON_PAYLOAD" | jq .
          
          # Send the request and print the response
          curl -s -X POST 'https://api.newrelic.com/graphql' \
            -H "Content-Type: application/json" \
            -H "Api-Key: $NR_API_KEY" \
            --data-raw "$JSON_PAYLOAD" | jq .
